% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_ctree_rules.R
\name{get_ctree_rules}
\alias{get_ctree_rules}
\title{Parse party ctree rules}
\usage{
get_ctree_rules(tree_fit, test_dat = NULL)
}
\arguments{
\item{tree_fit}{A tree model object.}

\item{test_dat}{A data.frame of test.}
}
\value{
A data frame with tree rules and bad percent under each rule.
}
\description{
\code{get_ctree_rules} This function is used to parse party ctree rules and percentage of bad under each rule.
}
\examples{
\dontrun{
train_test <- train_test_split(UCICreditCard, split_type = "Random", prop = 0.8, save_data = FALSE)
dat_train = train_test$train
dat_test = train_test$test
dat_train$default.payment.next.month = as.numeric(dat_train$default.payment.next.month)
require_packages("party")
set.seed(46)
ctree_fit = ctree(data = dat_train[, 8:26], default.payment.next.month ~ .,
controls = ctree_control(mincriterion = 0.9, minsplit = 0, minbucket = 300))
get_ctree_rules(tree_fit = ctree_fit, test_dat = dat_test)
require_packages("rpart")
set.seed(46)
rpart_fit <- rpart(data = dat_train[, 8:26], default.payment.next.month ~ .
              , control = rpart.control(minbucket = 300, cp = 0.0001, xval = 1, maxdepth = 10)
            , parms = list(split = "information"))
get_ctree_rules(tree_fit = rpart_fit, test_dat = dat_test)
}

}
